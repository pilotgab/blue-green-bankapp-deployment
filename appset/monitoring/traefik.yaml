application: traefik
clusterConfig:
  namespace: traefik
chart:
  name: traefik
  releaseName: traefik
  repoURL: https://traefik.github.io/charts
  targetRevision: v34.4.1
  values: |
    additionalArguments:
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare.acme.email=gabidachaba@gmail.com
      - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      - --certificatesresolvers.cloudflare.acme.dnschallenge.delaybeforecheck=0
      - --certificatesresolvers.cloudflare.acme.storage=/ssl-certs/acme-cloudflare.json
      - --certificatesresolvers.cloudflare.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
      - "--entryPoints.web.http.redirections.entryPoint.permanent=true"
      - "--entryPoints.web.address=:8000"
      - "--entryPoints.websecure.address=:8443"
      - "--entryPoints.websecure.http.tls.certResolver=cloudflare"
      - "--providers.kubernetesingress.ingressclass=traefik"
    env:
      - name: CF_API_EMAIL
        valueFrom:
          secretKeyRef:
            name: cloudflare-credentials
            key: email
      - name: CF_API_KEY
        valueFrom:
          secretKeyRef:
            name: cloudflare-credentials
            key: apikey
    deployment:
      podSecurityContext:
        fsGroup: 65532
        runAsUser: 65532
        runAsGroup: 65532
        runAsNonRoot: true
        fsGroupChangePolicy: "Always"
      initContainers:
        - name: fix-permissions
          image: busybox
          command:
            - sh
            - -c
            - "mkdir -p /ssl-certs && chown -R 65532:65532 /ssl-certs && chmod -R 700 /ssl-certs"
          volumeMounts:
            - name: ssl-certs
              mountPath: /ssl-certs
    logs:
      general:
        level: "ERROR"
    ingressRoute:
      dashboard:
        enabled: false
    persistence:
      enabled: true
      name: ssl-certs
      type: pvc
      accessMode: ReadWriteOnce
      size: 1Gi
      storageClass: managed-csi
      path: /ssl-certs
    ingressClass:
      enabled: true
      isDefaultClass: true
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
      limits:
        cpu: "500m"
        memory: 512Mi
    service:
      enabled: true
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/azure-load-balancer-resource-group: "stage-pilotgab-rg-nrg"
        service.beta.kubernetes.io/azure-load-balancer-internal: "false"
      ports:
        - port: 80
          targetPort: 8000
          name: web
        - port: 443
          targetPort: 8443
          name: websecure
