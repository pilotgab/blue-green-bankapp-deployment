application: traefik
clusterConfig:
  namespace: traefik
chart:
  name: traefik
  releaseName: traefik
  repoURL: https://traefik.github.io/charts
  targetRevision: v34.4.1
  values: |
    additionalArguments:
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare.acme.email=gabidachaba@gmail.com
      - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=8.8.8.8:53,9.9.9.9:53,1.1.1.1:53
      - --certificatesresolvers.cloudflare.acme.dnschallenge.delaybeforecheck=10
      - --certificatesresolvers.cloudflare.acme.storage=/data/acme.json
      - --certificatesresolvers.cloudflare.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.web.address=:8000/tcp"
      - "--entrypoints.websecure.address=:8443/tcp"
      # - "--entrypoints.metrics.address=:9100/tcp"
      - "--entrypoints.websecure.http.tls.certresolver=cloudflare"
      - "--providers.kubernetesingress.ingressclass=traefik"
      - "--entrypoints.traefik.address=:8080/tcp"
      - "--api.dashboard=false"
      - "--ping"
      - "--ping.entrypoint=web"
    env:
      - name: CF_API_EMAIL
        valueFrom:
          secretKeyRef:
            name: cloudflare-credentials
            key: email
      - name: CF_API_KEY
        valueFrom:
          secretKeyRef:
            name: cloudflare-credentials
            key: apikey
    deployment:
      podSecurityContext:
        fsGroup: 65532
        runAsUser: 65532
        runAsGroup: 65532
        runAsNonRoot: true
        fsGroupChangePolicy: "Always"
      livenessProbe:
        httpGet:
          path: /ping
          port: web
        initialDelaySeconds: 10
        periodSeconds: 15
        failureThreshold: 5
        timeoutSeconds: 5
      readinessProbe:
        httpGet:
          path: /ping
          port: web
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 15
        timeoutSeconds: 5
    logs:
      general:
        level: "DEBUG"
    ingressRoute:
      dashboard:
        enabled: false
    persistence:
      enabled: true
      existingClaim: traefik-pvc
      accessMode: ReadWriteOnce
      size: 1Gi
      path: /data
    ingressClass:
      enabled: true
      isDefaultClass: true
    resources:
      requests:
        cpu: "500m"
        memory: 512Mi
      limits:
        cpu: "500m"
        memory: 512Mi
    service:
      enabled: true
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/azure-load-balancer-resource-group: "stage-pilotgab-rg-nrg"
        service.beta.kubernetes.io/azure-load-balancer-internal: "false"
        service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: /ping
        service.beta.kubernetes.io/azure-load-balancer-health-probe-interval: "10"
        service.beta.kubernetes.io/azure-load-balancer-health-probe-number-of-probes: "2"
        service.beta.kubernetes.io/azure-load-balancer-health-probe-port: "8000"
      ports:
        - port: 80
          targetPort: 8000
          name: web
          appProtocol: http
        - port: 443
          targetPort: 8443
          name: websecure
      selector:
        app.kubernetes.io/instance: traefik-traefik
        app.kubernetes.io/name: traefik
