name: Terraform CI/CD

on:
  push:
    branches:
      - main
      - master
      - feature/*
    paths:
      - "aks-cluster/**"

jobs:
  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Terraform Init (Dev)
        id: init-dev
        run: terraform init
        working-directory: aks-cluster/dev
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_RESOURCE_GROUP_NAME: "terraform-state-rg"
          ARM_STORAGE_ACCOUNT_NAME: "pilotgabdevbackend2025"
          ARM_CONTAINER_NAME: "tfstate"
          ARM_KEY: "dev.terraform.tfstate"

      - name: Terraform Validate (Dev)
        id: validate-dev
        run: terraform validate
        working-directory: aks-cluster/dev

  dev-deploy:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Terraform Init (Dev)
        id: init-dev
        run: terraform init
        working-directory: aks-cluster/dev
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_RESOURCE_GROUP_NAME: "terraform-state-rg"
          ARM_STORAGE_ACCOUNT_NAME: "pilotgabdevbackend2025"
          ARM_CONTAINER_NAME: "tfstate"
          ARM_KEY: "dev.terraform.tfstate"

      - name: Terraform Plan (Dev)
        id: plan-dev
        run: terraform plan
        working-directory: aks-cluster/dev

      - name: Terraform Apply (Dev)
        id: apply-dev
        run: terraform apply -auto-approve
        working-directory: aks-cluster/dev

  staging-deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Terraform Init (Staging)
        id: init-staging
        run: terraform init
        working-directory: aks-cluster/staging
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_RESOURCE_GROUP_NAME: "terraform-state-rg"
          ARM_STORAGE_ACCOUNT_NAME: "pilotgabstagebackend2025"
          ARM_CONTAINER_NAME: "tfstate"
          ARM_KEY: "stage.terraform.tfstate"

      - name: Terraform Plan (Staging)
        id: plan-staging
        run: terraform plan
        working-directory: aks-cluster/staging

      - name: Terraform Apply (Staging)
        id: apply-staging
        run: terraform apply -auto-approve
        working-directory: aks-cluster/staging

  prod-deploy:
    name: Deploy to Prod
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Terraform Init (Prod)
        id: init-prod
        run: terraform init
        working-directory: aks-cluster/prod
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_RESOURCE_GROUP_NAME: "terraform-state-rg"
          ARM_STORAGE_ACCOUNT_NAME: "pilotgabprodbackend2025"
          ARM_CONTAINER_NAME: "tfstate"
          ARM_KEY: "prod.terraform.tfstate"

      - name: Terraform Plan (Prod)
        id: plan-prod
        run: terraform plan
        working-directory: aks-cluster/prod

      - name: Terraform Apply (Prod)
        id: apply-prod
        run: terraform apply -auto-approve
        working-directory: aks-cluster/prod
